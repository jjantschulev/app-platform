# Managed By app-platform server. 
# All Edits will be overwritten.
# Remove the .aps from the file extension to customise the file.

server {
    listen 80;
    listen [::]:80;
    server_name !(domain);
    !(if https)
        return 301 https://$host$request_uri;
    !/


    !(for app in apps)
        # !(app.name)
        location !(app.uri) {
            !(if app.secured)
            auth_request /auth_!(app.appId);
            auth_request_set $x_auth_user_id $upstream_http_x_auth_user_id;
            auth_request_set $x_auth_user_email $upstream_http_x_auth_user_email;
            auth_request_set $x_auth_user_firstname $upstream_http_x_auth_user_firstname;
            auth_request_set $x_auth_user_lastname $upstream_http_x_auth_user_lastname;
            auth_request_set $x_auth_user_name $upstream_http_x_auth_user_name;
            !/

            !(if app.static)
            root !(app.url);
            try_files $uri $uri/ =404;
            !(else)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            !(if app.secured)
            proxy_set_header X-Auth-User-ID $x_auth_user_id;
            proxy_set_header X-Auth-User-Email $x_auth_user_email;
            proxy_set_header X-Auth-User-Firstname $x_auth_user_firstname;
            proxy_set_header X-Auth-User-Lastname $x_auth_user_lastname;
            proxy_set_header X-Auth-User-Name $x_auth_user_name;
            !/

            proxy_pass !(app.url);
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
			!/

            !(if app.secured)
            error_page 401 = @error401_!(app.appId);
            !/
        }
        !(if app.secured)

        location @error401_!(app.appId) {
            return 302 https://idp.ausjan.com/api/nginx-auth/!(app.authId)/login?redirect_url=http://$http_host$request_uri&app_id=!(app.appId)&domain=!(domain);
        }

        location /auth_login_!(app.appId) {
            if ($arg_redirect_url) {
                add_header Set-Cookie "nginxAuthToken!(app.authId)=$arg_auth_token;Path=!(app.uri);Max-Age=120;HttpOnly;SameSite=Strict;Secure";
                return 302 $arg_redirect_url;
            }
            return 200;
        }

        location = /auth_!(app.appId) {
            internal;
            proxy_pass              https://idp.ausjan.com/api/nginx-auth/!(app.authId);
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
        !/
    !/

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location = /.well-known/acme-challenge/ {
        return 404;
    }
}


!(if https)
server {
    server_name !(domain);
    listen 443;
    listen [::]:443;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/!(domain)/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/!(domain)/privkey.pem;

    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Enable server-side protection against BEAST attacks
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

    #   HSTS - Strict Transport Security. Enable with caution. You can never remove https from this website after enabeling
    #   # Aditional Security Headers
    #   # ref: https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
    add_header X-Frame-Options DENY always;

    # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
    add_header X-Content-Type-Options nosniff always;

    # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
    add_header X-Xss-Protection "1; mode=block" always;

    # Enable OCSP stapling 
    # ref. http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/!(domain)/fullchain.pem;

    !(for app in apps)
        # !(app.name)
        location !(app.uri) {
            !(if app.secured)
            auth_request /auth_!(app.appId);
            auth_request_set $x_auth_user_id $upstream_http_x_auth_user_id;
            auth_request_set $x_auth_user_email $upstream_http_x_auth_user_email;
            auth_request_set $x_auth_user_firstname $upstream_http_x_auth_user_firstname;
            auth_request_set $x_auth_user_lastname $upstream_http_x_auth_user_lastname;
            auth_request_set $x_auth_user_name $upstream_http_x_auth_user_name;
            !/

            !(if app.static)
            root !(app.url);
            try_files $uri $uri/ =404;
            !(else)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            !(if app.secured)
            proxy_set_header X-Auth-User-ID $x_auth_user_id;
            proxy_set_header X-Auth-User-Email $x_auth_user_email;
            proxy_set_header X-Auth-User-Firstname $x_auth_user_firstname;
            proxy_set_header X-Auth-User-Lastname $x_auth_user_lastname;
            proxy_set_header X-Auth-User-Name $x_auth_user_name;
            !/
            
            proxy_pass !(app.url);
            proxy_http_version 1.1;
           	proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            !/        

            !(if app.secured)
            error_page 401 = @error401_!(app.appId);
            !/
        }
        !(if app.secured)

        location @error401_!(app.appId) {
            return 302 https://idp.ausjan.com/api/nginx-auth/!(app.authId)/login?redirect_url=https://$http_host$request_uri&app_id=!(app.appId)&domain=!(domain);
        }

        location /auth_login_!(app.appId) {
            if ($arg_redirect_url) {
                add_header Set-Cookie "nginxAuthToken!(app.authId)=$arg_auth_token;Path=!(app.uri);Max-Age=120;HttpOnly;SameSite=Strict;Secure";
                return 302 $arg_redirect_url;
            }
            return 200;
        }

        location = /auth_!(app.appId) {
            internal;
            proxy_pass              https://idp.ausjan.com/api/nginx-auth/!(app.authId);
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
        !/
    !/

    
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location = /.well-known/acme-challenge/ {
        return 404;
    }

}
!/
